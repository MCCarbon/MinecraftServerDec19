package net.minecraft.server;

import java.util.Set;

import com.google.common.collect.Sets;

public class class_aim {
	private static final Set df;
	public static final class_ail a;
	public static final class_ail b;
	public static final class_akm c;
	public static final class_ail d;
	public static final class_ail e;
	public static final class_ail f;
	public static final class_ail g;
	public static final class_ail h;
	public static final class_ajr i;
	public static final class_anh j;
	public static final class_ajr k;
	public static final class_anh l;
	public static final class_ams m;
	public static final class_ail n;
	public static final class_ail o;
	public static final class_ail p;
	public static final class_ail q;
	public static final class_ail r;
	public static final class_ail s;
	public static final class_alc t;
	public static final class_alc u;
	public static final class_ail v;
	public static final class_ail w;
	public static final class_ail x;
	public static final class_ail y;
	public static final class_ail z;
	public static final class_ail A;
	public static final class_ail B;
	public static final class_ail C;
	public static final class_ail D;
	public static final class_ail E;
	public static final class_apg F;
	public static final class_ail G;
	public static final class_ano H;
	public static final class_ajh I;
	public static final class_apg J;
	public static final class_aph K;
	public static final class_ail L;
	public static final class_apj M;
	public static final class_ake N;
	public static final class_ake O;
	public static final class_aiq P;
	public static final class_aiq Q;
	public static final class_ail R;
	public static final class_ail S;
	public static final class_akq T;
	public static final class_akq U;
	public static final class_ail V;
	public static final class_ail W;
	public static final class_ail X;
	public static final class_ail Y;
	public static final class_ail Z;
	public static final class_ail aa;
	public static final class_akd ab;
	public static final class_ail ac;
	public static final class_ail ad;
	public static final class_aiw ae;
	public static final class_amm af;
	public static final class_ail ag;
	public static final class_ail ah;
	public static final class_ail ai;
	public static final class_ail aj;
	public static final class_ail ak;
	public static final class_ail al;
	public static final class_ail am;
	public static final class_ail an;
	public static final class_ail ao;
	public static final class_ail ap;
	public static final class_ail aq;
	public static final class_ail ar;
	public static final class_ail as;
	public static final class_ail at;
	public static final class_ail au;
	public static final class_ail av;
	public static final class_ail aw;
	public static final class_ail ax;
	public static final class_ail ay;
	public static final class_ail az;
	public static final class_ail aA;
	public static final class_ail aB;
	public static final class_ail aC;
	public static final class_ail aD;
	public static final class_ail aE;
	public static final class_ail aF;
	public static final class_ail aG;
	public static final class_ail aH;
	public static final class_ail aI;
	public static final class_ail aJ;
	public static final class_ais aK;
	public static final class_ail aL;
	public static final class_amp aM;
	public static final class_ail aN;
	public static final class_ail aO;
	public static final class_ail aP;
	public static final class_ail aQ;
	public static final class_ail aR;
	public static final class_ail aS;
	public static final class_ail aT;
	public static final class_ail aU;
	public static final class_ail aV;
	public static final class_ail aW;
	public static final class_ail aX;
	public static final class_alz aY;
	public static final class_ail aZ;
	public static final class_ail ba;
	public static final class_amq bb;
	public static final class_amq bc;
	public static final class_ail bd;
	public static final class_ail be;
	public static final class_ail bf;
	public static final class_ail bg;
	public static final class_ail bh;
	public static final class_ail bi;
	public static final class_ail bj;
	public static final class_ail bk;
	public static final class_ail bl;
	public static final class_ail bm;
	public static final class_ail bn;
	public static final class_ail bo;
	public static final class_ail bp;
	public static final class_ail bq;
	public static final class_ail br;
	public static final class_ail bs;
	public static final class_ail bt;
	public static final class_ail bu;
	public static final class_ail bv;
	public static final class_all bw;
	public static final class_ail bx;
	public static final class_ail by;
	public static final class_ail bz;
	public static final class_ail bA;
	public static final class_ail bB;
	public static final class_ail bC;
	public static final class_ail bD;
	public static final class_aiv bE;
	public static final class_ail bF;
	public static final class_ail bG;
	public static final class_ail bH;
	public static final class_ail bI;
	public static final class_ail bJ;
	public static final class_ail bK;
	public static final class_akq bL;
	public static final class_akq bM;
	public static final class_ail bN;
	public static final class_ail bO;
	public static final class_ail bP;
	public static final class_ail bQ;
	public static final class_anv bR;
	public static final class_ail bS;
	public static final class_ail bT;
	public static final class_ail bU;
	public static final class_ail bV;
	public static final class_ail bW;
	public static final class_ail bX;
	public static final class_aii bY;
	public static final class_ail bZ;
	public static final class_ail ca;
	public static final class_ail cb;
	public static final class_ail cc;
	public static final class_ail cd;
	public static final class_amx ce;
	public static final class_ail cf;
	public static final class_ail cg;
	public static final class_ail ch;
	public static final class_ail ci;
	public static final class_ajd cj;
	public static final class_ajd ck;
	public static final class_ajg cl;
	public static final class_ajg cm;
	public static final class_ail cn;
	public static final class_ail co;
	public static final class_akw cp;
	public static final class_ail cq;
	public static final class_ail cr;
	public static final class_ail cs;
	public static final class_ail ct;
	public static final class_ail cu;
	public static final class_ail cv;
	public static final class_ail cw;
	public static final class_ail cx;
	public static final class_ail cy;
	public static final class_ail cz;
	public static final class_ail cA;
	public static final class_ail cB;
	public static final class_ail cC;
	public static final class_ail cD;
	public static final class_ail cE;
	public static final class_ajo cF;
	public static final class_and cG;
	public static final class_ane cH;
	public static final class_ail cI;
	public static final class_ail cJ;
	public static final class_ail cK;
	public static final class_ail cL;
	public static final class_ail cM;
	public static final class_ail cN;
	public static final class_akq cO;
	public static final class_akq cP;
	public static final class_ail cQ;
	public static final class_ail cR;
	public static final class_ail cS;
	public static final class_ail cT;
	public static final class_ail cU;
	public static final class_ail cV;
	public static final class_akq cW;
	public static final class_akq cX;
	public static final class_ail cY;
	public static final class_ail cZ;
	public static final class_ail da;
	public static final class_ail db;
	public static final class_ail dc;
	public static final class_ail dd;
	public static final class_ail de;

	private static class_ail a(String var0) {
		class_ail var1 = (class_ail) class_ail.c.c(new class_ke(var0));
		if (!df.add(var1)) {
			throw new IllegalStateException("Invalid Block requested: " + var0);
		} else {
			return var1;
		}
	}

	static {
		if (!class_kh.a()) {
			throw new RuntimeException("Accessed Blocks before Bootstrap!");
		} else {
			df = Sets.newHashSet();
			a = a("air");
			b = a("stone");
			c = (class_akm) a("grass");
			d = a("dirt");
			e = a("cobblestone");
			f = a("planks");
			g = a("sapling");
			h = a("bedrock");
			i = (class_ajr) a("flowing_water");
			j = (class_anh) a("water");
			k = (class_ajr) a("flowing_lava");
			l = (class_anh) a("lava");
			m = (class_ams) a("sand");
			n = a("gravel");
			o = a("gold_ore");
			p = a("iron_ore");
			q = a("coal_ore");
			r = a("log");
			s = a("log2");
			t = (class_alc) a("leaves");
			u = (class_alc) a("leaves2");
			v = a("sponge");
			w = a("glass");
			x = a("lapis_ore");
			y = a("lapis_block");
			z = a("dispenser");
			A = a("sandstone");
			B = a("noteblock");
			C = a("bed");
			D = a("golden_rail");
			E = a("detector_rail");
			F = (class_apg) a("sticky_piston");
			G = a("web");
			H = (class_ano) a("tallgrass");
			I = (class_ajh) a("deadbush");
			J = (class_apg) a("piston");
			K = (class_aph) a("piston_head");
			L = a("wool");
			M = (class_apj) a("piston_extension");
			N = (class_ake) a("yellow_flower");
			O = (class_ake) a("red_flower");
			P = (class_aiq) a("brown_mushroom");
			Q = (class_aiq) a("red_mushroom");
			R = a("gold_block");
			S = a("iron_block");
			T = (class_akq) a("double_stone_slab");
			U = (class_akq) a("stone_slab");
			V = a("brick_block");
			W = a("tnt");
			X = a("bookshelf");
			Y = a("mossy_cobblestone");
			Z = a("obsidian");
			aa = a("torch");
			ab = (class_akd) a("fire");
			ac = a("mob_spawner");
			ad = a("oak_stairs");
			ae = (class_aiw) a("chest");
			af = (class_amm) a("redstone_wire");
			ag = a("diamond_ore");
			ah = a("diamond_block");
			ai = a("crafting_table");
			aj = a("wheat");
			ak = a("farmland");
			al = a("furnace");
			am = a("lit_furnace");
			an = a("standing_sign");
			ao = a("wooden_door");
			ap = a("spruce_door");
			aq = a("birch_door");
			ar = a("jungle_door");
			as = a("acacia_door");
			at = a("dark_oak_door");
			au = a("ladder");
			av = a("rail");
			aw = a("stone_stairs");
			ax = a("wall_sign");
			ay = a("lever");
			az = a("stone_pressure_plate");
			aA = a("iron_door");
			aB = a("wooden_pressure_plate");
			aC = a("redstone_ore");
			aD = a("lit_redstone_ore");
			aE = a("unlit_redstone_torch");
			aF = a("redstone_torch");
			aG = a("stone_button");
			aH = a("snow_layer");
			aI = a("ice");
			aJ = a("snow");
			aK = (class_ais) a("cactus");
			aL = a("clay");
			aM = (class_amp) a("reeds");
			aN = a("jukebox");
			aO = a("fence");
			aP = a("spruce_fence");
			aQ = a("birch_fence");
			aR = a("jungle_fence");
			aS = a("dark_oak_fence");
			aT = a("acacia_fence");
			aU = a("pumpkin");
			aV = a("netherrack");
			aW = a("soul_sand");
			aX = a("glowstone");
			aY = (class_alz) a("portal");
			aZ = a("lit_pumpkin");
			ba = a("cake");
			bb = (class_amq) a("unpowered_repeater");
			bc = (class_amq) a("powered_repeater");
			bd = a("trapdoor");
			be = a("monster_egg");
			bf = a("stonebrick");
			bg = a("brown_mushroom_block");
			bh = a("red_mushroom_block");
			bi = a("iron_bars");
			bj = a("glass_pane");
			bk = a("melon_block");
			bl = a("pumpkin_stem");
			bm = a("melon_stem");
			bn = a("vine");
			bo = a("fence_gate");
			bp = a("spruce_fence_gate");
			bq = a("birch_fence_gate");
			br = a("jungle_fence_gate");
			bs = a("dark_oak_fence_gate");
			bt = a("acacia_fence_gate");
			bu = a("brick_stairs");
			bv = a("stone_brick_stairs");
			bw = (class_all) a("mycelium");
			bx = a("waterlily");
			by = a("nether_brick");
			bz = a("nether_brick_fence");
			bA = a("nether_brick_stairs");
			bB = a("nether_wart");
			bC = a("enchanting_table");
			bD = a("brewing_stand");
			bE = (class_aiv) a("cauldron");
			bF = a("end_portal");
			bG = a("end_portal_frame");
			bH = a("end_stone");
			bI = a("dragon_egg");
			bJ = a("redstone_lamp");
			bK = a("lit_redstone_lamp");
			bL = (class_akq) a("double_wooden_slab");
			bM = (class_akq) a("wooden_slab");
			bN = a("cocoa");
			bO = a("sandstone_stairs");
			bP = a("emerald_ore");
			bQ = a("ender_chest");
			bR = (class_anv) a("tripwire_hook");
			bS = a("tripwire");
			bT = a("emerald_block");
			bU = a("spruce_stairs");
			bV = a("birch_stairs");
			bW = a("jungle_stairs");
			bX = a("command_block");
			bY = (class_aii) a("beacon");
			bZ = a("cobblestone_wall");
			ca = a("flower_pot");
			cb = a("carrots");
			cc = a("potatoes");
			cd = a("wooden_button");
			ce = (class_amx) a("skull");
			cf = a("anvil");
			cg = a("trapped_chest");
			ch = a("light_weighted_pressure_plate");
			ci = a("heavy_weighted_pressure_plate");
			cj = (class_ajd) a("unpowered_comparator");
			ck = (class_ajd) a("powered_comparator");
			cl = (class_ajg) a("daylight_detector");
			cm = (class_ajg) a("daylight_detector_inverted");
			cn = a("redstone_block");
			co = a("quartz_ore");
			cp = (class_akw) a("hopper");
			cq = a("quartz_block");
			cr = a("quartz_stairs");
			cs = a("activator_rail");
			ct = a("dropper");
			cu = a("stained_hardened_clay");
			cv = a("barrier");
			cw = a("iron_trapdoor");
			cx = a("hay_block");
			cy = a("carpet");
			cz = a("hardened_clay");
			cA = a("coal_block");
			cB = a("packed_ice");
			cC = a("acacia_stairs");
			cD = a("dark_oak_stairs");
			cE = a("slime");
			cF = (class_ajo) a("double_plant");
			cG = (class_and) a("stained_glass");
			cH = (class_ane) a("stained_glass_pane");
			cI = a("prismarine");
			cJ = a("sea_lantern");
			cK = a("standing_banner");
			cL = a("wall_banner");
			cM = a("red_sandstone");
			cN = a("red_sandstone_stairs");
			cO = (class_akq) a("double_stone_slab2");
			cP = (class_akq) a("stone_slab2");
			cQ = a("end_rod");
			cR = a("chorus_plant");
			cS = a("chorus_flower");
			cT = a("purpur_block");
			cU = a("purpur_pillar");
			cV = a("purpur_stairs");
			cW = (class_akq) a("purpur_double_slab");
			cX = (class_akq) a("purpur_slab");
			cY = a("end_bricks");
			cZ = a("beetroots");
			da = a("grass_path");
			db = a("end_gateway");
			dc = a("repeating_command_block");
			dd = a("chain_command_block");
			de = a("structure_block");
			df.clear();
		}
	}
}
